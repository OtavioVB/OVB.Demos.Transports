// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using OVB.Demos.Transports.CompanyContext.Infrascructure.EntityFrameworkCore;

#nullable disable

namespace OVB.Demos.Transports.CompanyContext.Infrascructure.Migrations
{
    [DbContext(typeof(CompanyDataContext))]
    [Migration("20230608140545_BaseMigration")]
    partial class BaseMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("OVB.Demos.Transports.CompanyContext.Domain.Bussines.CompanyContext.DataTransferObject.Company", b =>
                {
                    b.Property<Guid>("Identifier")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CorrelationIdentifier")
                        .HasColumnType("uuid");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("CHAR")
                        .HasColumnName("Country")
                        .IsFixedLength();

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DocumentContent")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("DocumentContent")
                        .IsFixedLength(false);

                    b.Property<string>("DocumentType")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("CHAR")
                        .HasColumnName("DocumentType")
                        .IsFixedLength();

                    b.Property<byte[]>("Documents")
                        .IsRequired()
                        .HasColumnType("BYTEA")
                        .HasColumnName("Documents")
                        .IsFixedLength(false);

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("CHAR")
                        .HasColumnName("Language")
                        .IsFixedLength();

                    b.Property<string>("PlatformName")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("PlatformName")
                        .IsFixedLength(false);

                    b.Property<string>("RealName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("RealName")
                        .IsFixedLength(false);

                    b.Property<string>("SourcePlatform")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Identifier")
                        .HasName("PK_COMPANY_IDENTIFIER");

                    b.HasIndex("DocumentContent", "DocumentType")
                        .IsUnique()
                        .HasDatabaseName("UK_COMPANY_DOCUMENT");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("OVB.Demos.Transports.CompanyContext.Domain.Bussines.OwnerAuthenticationContext.DataTransferObject.OwnerAuthentication", b =>
                {
                    b.Property<Guid>("Identifier")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CorrelationIdentifier")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("Email")
                        .IsFixedLength(false);

                    b.Property<bool>("IsActivatedAccess")
                        .HasColumnType("BOOLEAN")
                        .IsFixedLength();

                    b.Property<bool>("IsEmailConfirmed")
                        .HasColumnType("BOOLEAN")
                        .IsFixedLength();

                    b.Property<Guid?>("OwnerIdentifier")
                        .IsRequired()
                        .HasColumnType("uuid");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("CHAR")
                        .HasColumnName("Password")
                        .IsFixedLength();

                    b.Property<string>("SourcePlatform")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("Username")
                        .IsFixedLength(false);

                    b.HasKey("Identifier")
                        .HasName("PK_OWNERAUTHENTICATION_IDENTIFIER");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasDatabaseName("UK_OWNERAUTHENTICATION_EMAIL");

                    b.HasIndex("OwnerIdentifier")
                        .IsUnique();

                    b.HasIndex("Username")
                        .IsUnique()
                        .HasDatabaseName("UK_OWNERAUTHENTICATION_UESRNAME");

                    b.ToTable("OwnerAuthentication");
                });

            modelBuilder.Entity("OVB.Demos.Transports.CompanyContext.Domain.Bussines.OwnerContext.DataTransferObject.Owner", b =>
                {
                    b.Property<Guid>("Identifier")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CompanyIdentifier")
                        .IsRequired()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CorrelationIdentifier")
                        .HasColumnType("uuid");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("CHAR")
                        .HasColumnName("Country")
                        .IsFixedLength();

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DocumentContent")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("DocumentContent")
                        .IsFixedLength(false);

                    b.Property<string>("DocumentType")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("CHAR")
                        .HasColumnName("DocumentType")
                        .IsFixedLength();

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("CHAR")
                        .HasColumnName("Language")
                        .IsFixedLength();

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("LastName")
                        .IsFixedLength(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("Name")
                        .IsFixedLength(false);

                    b.Property<byte[]>("OwnerDocuments")
                        .IsRequired()
                        .HasColumnType("BYTEA")
                        .HasColumnName("OwnerDocuments")
                        .IsFixedLength(false);

                    b.Property<string>("SourcePlatform")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Identifier")
                        .HasName("PK_OWNER_IDENTIFIER");

                    b.HasIndex("CompanyIdentifier");

                    b.HasIndex("DocumentType", "DocumentContent")
                        .IsUnique()
                        .HasDatabaseName("UK_OWNER_DOCUMENTTYPE_AND_DOCUMENTCONTENT");

                    b.ToTable("Owners");
                });

            modelBuilder.Entity("OVB.Demos.Transports.CompanyContext.Domain.Bussines.OwnerPhoneContext.DataTransferObject.OwnerPhone", b =>
                {
                    b.Property<Guid>("Identifier")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Dd")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("CHAR")
                        .HasColumnName("Dd")
                        .IsFixedLength();

                    b.Property<string>("Ddi")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("CHAR")
                        .HasColumnName("Ddi")
                        .IsFixedLength();

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("Number")
                        .IsFixedLength(false);

                    b.Property<Guid?>("OwnerIdentifier")
                        .IsRequired()
                        .HasColumnType("uuid");

                    b.HasKey("Identifier")
                        .HasName("PK_OWNERPHONE_IDENTIFIER");

                    b.HasIndex("OwnerIdentifier");

                    b.HasIndex("Ddi", "Dd", "Number")
                        .IsUnique()
                        .HasDatabaseName("UK_OWNERPHONE_PHONE");

                    b.ToTable("OwnerPhones");
                });

            modelBuilder.Entity("OVB.Demos.Transports.CompanyContext.Domain.Bussines.OwnerAuthenticationContext.DataTransferObject.OwnerAuthentication", b =>
                {
                    b.HasOne("OVB.Demos.Transports.CompanyContext.Domain.Bussines.OwnerContext.DataTransferObject.Owner", "Owner")
                        .WithOne("OwnerAuthentication")
                        .HasForeignKey("OVB.Demos.Transports.CompanyContext.Domain.Bussines.OwnerAuthenticationContext.DataTransferObject.OwnerAuthentication", "OwnerIdentifier")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_1_OWNERAUTHENTCATION_1_OWNER");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("OVB.Demos.Transports.CompanyContext.Domain.Bussines.OwnerContext.DataTransferObject.Owner", b =>
                {
                    b.HasOne("OVB.Demos.Transports.CompanyContext.Domain.Bussines.CompanyContext.DataTransferObject.Company", "Company")
                        .WithMany("Owners")
                        .HasForeignKey("CompanyIdentifier")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_1_COMPANY_N_OWNERS");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("OVB.Demos.Transports.CompanyContext.Domain.Bussines.OwnerPhoneContext.DataTransferObject.OwnerPhone", b =>
                {
                    b.HasOne("OVB.Demos.Transports.CompanyContext.Domain.Bussines.OwnerContext.DataTransferObject.Owner", "Owner")
                        .WithMany("OwnerPhones")
                        .HasForeignKey("OwnerIdentifier")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_N_OWNERPHONES_1_OWNER");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("OVB.Demos.Transports.CompanyContext.Domain.Bussines.CompanyContext.DataTransferObject.Company", b =>
                {
                    b.Navigation("Owners");
                });

            modelBuilder.Entity("OVB.Demos.Transports.CompanyContext.Domain.Bussines.OwnerContext.DataTransferObject.Owner", b =>
                {
                    b.Navigation("OwnerAuthentication");

                    b.Navigation("OwnerPhones");
                });
#pragma warning restore 612, 618
        }
    }
}
